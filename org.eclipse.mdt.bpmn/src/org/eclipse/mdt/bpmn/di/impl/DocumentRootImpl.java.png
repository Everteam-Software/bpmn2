/**
 *  Copyright (c) 2000-2009, Intalio Inc.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 *   
 *  Contributors:
 *     Intalio Inc. - initial API and implementation
 *
 * $Id$
 */
package org.eclipse.mdt.bpmn.di.impl;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EMap;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.ecore.EcorePackage;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl;

import org.eclipse.emf.ecore.util.BasicFeatureMap;
import org.eclipse.emf.ecore.util.EcoreEMap;
import org.eclipse.emf.ecore.util.FeatureMap;
import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.mdt.bpmn.di.Bendpoint;
import org.eclipse.mdt.bpmn.di.Connector;
import org.eclipse.mdt.bpmn.di.Diagram;
import org.eclipse.mdt.bpmn.di.DocumentRoot;
import org.eclipse.mdt.bpmn.di.Node;
import org.eclipse.mdt.bpmn.di.Style;
import org.eclipse.mdt.bpmn.di.View;
import org.eclipse.mdt.bpmn.di.diPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Document Root</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.eclipse.mdt.bpmn.di.impl.DocumentRootImpl#getMixed <em>Mixed</em>}</li>
 *   <li>{@link org.eclipse.mdt.bpmn.di.impl.DocumentRootImpl#getXMLNSPrefixMap <em>XMLNS Prefix Map</em>}</li>
 *   <li>{@link org.eclipse.mdt.bpmn.di.impl.DocumentRootImpl#getXSISchemaLocation <em>XSI Schema Location</em>}</li>
 *   <li>{@link org.eclipse.mdt.bpmn.di.impl.DocumentRootImpl#getBendpoint <em>Bendpoint</em>}</li>
 *   <li>{@link org.eclipse.mdt.bpmn.di.impl.DocumentRootImpl#getConnector <em>Connector</em>}</li>
 *   <li>{@link org.eclipse.mdt.bpmn.di.impl.DocumentRootImpl#getView <em>View</em>}</li>
 *   <li>{@link org.eclipse.mdt.bpmn.di.impl.DocumentRootImpl#getDiagram <em>Diagram</em>}</li>
 *   <li>{@link org.eclipse.mdt.bpmn.di.impl.DocumentRootImpl#getNode <em>Node</em>}</li>
 *   <li>{@link org.eclipse.mdt.bpmn.di.impl.DocumentRootImpl#getStyle <em>Style</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class DocumentRootImpl extends EObjectImpl implements DocumentRoot {
    /**
     * The cached value of the '{@link #getMixed() <em>Mixed</em>}' attribute list.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see #getMixed()
     * @generated
     * @ordered
     */
    protected FeatureMap mixed;

    /**
     * The cached value of the '{@link #getXMLNSPrefixMap() <em>XMLNS Prefix Map</em>}' map.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see #getXMLNSPrefixMap()
     * @generated
     * @ordered
     */
    protected EMap<String, String> xMLNSPrefixMap;

    /**
     * The cached value of the '{@link #getXSISchemaLocation() <em>XSI Schema Location</em>}' map.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see #getXSISchemaLocation()
     * @generated
     * @ordered
     */
    protected EMap<String, String> xSISchemaLocation;

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DocumentRootImpl() {
        super();
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    protected EClass eStaticClass() {
        return diPackage.Literals.DOCUMENT_ROOT;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public FeatureMap getMixed() {
        if (mixed == null) {
            mixed = new BasicFeatureMap(this, diPackage.DOCUMENT_ROOT__MIXED);
        }
        return mixed;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public EMap<String, String> getXMLNSPrefixMap() {
        if (xMLNSPrefixMap == null) {
            xMLNSPrefixMap = new EcoreEMap<String, String>(
                    EcorePackage.Literals.ESTRING_TO_STRING_MAP_ENTRY,
                    EStringToStringMapEntryImpl.class, this,
                    diPackage.DOCUMENT_ROOT__XMLNS_PREFIX_MAP);
        }
        return xMLNSPrefixMap;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public EMap<String, String> getXSISchemaLocation() {
        if (xSISchemaLocation == null) {
            xSISchemaLocation = new EcoreEMap<String, String>(
                    EcorePackage.Literals.ESTRING_TO_STRING_MAP_ENTRY,
                    EStringToStringMapEntryImpl.class, this,
                    diPackage.DOCUMENT_ROOT__XSI_SCHEMA_LOCATION);
        }
        return xSISchemaLocation;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public Bendpoint getBendpoint() {
        return (Bendpoint) getMixed().get(
                diPackage.Literals.DOCUMENT_ROOT__BENDPOINT, true);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public NotificationChain basicSetBendpoint(Bendpoint newBendpoint,
            NotificationChain msgs) {
        return ((FeatureMap.Internal) getMixed())
                .basicAdd(diPackage.Literals.DOCUMENT_ROOT__BENDPOINT,
                        newBendpoint, msgs);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setBendpoint(Bendpoint newBendpoint) {
        ((FeatureMap.Internal) getMixed()).set(
                diPackage.Literals.DOCUMENT_ROOT__BENDPOINT, newBendpoint);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public Connector getConnector() {
        return (Connector) getMixed().get(
                diPackage.Literals.DOCUMENT_ROOT__CONNECTOR, true);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public NotificationChain basicSetConnector(Connector newConnector,
            NotificationChain msgs) {
        return ((FeatureMap.Internal) getMixed())
                .basicAdd(diPackage.Literals.DOCUMENT_ROOT__CONNECTOR,
                        newConnector, msgs);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setConnector(Connector newConnector) {
        ((FeatureMap.Internal) getMixed()).set(
                diPackage.Literals.DOCUMENT_ROOT__CONNECTOR, newConnector);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public View getView() {
        return (View) getMixed().get(diPackage.Literals.DOCUMENT_ROOT__VIEW,
                true);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public NotificationChain basicSetView(View newView, NotificationChain msgs) {
        return ((FeatureMap.Internal) getMixed()).basicAdd(
                diPackage.Literals.DOCUMENT_ROOT__VIEW, newView, msgs);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setView(View newView) {
        ((FeatureMap.Internal) getMixed()).set(
                diPackage.Literals.DOCUMENT_ROOT__VIEW, newView);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public Diagram getDiagram() {
        return (Diagram) getMixed().get(
                diPackage.Literals.DOCUMENT_ROOT__DIAGRAM, true);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public NotificationChain basicSetDiagram(Diagram newDiagram,
            NotificationChain msgs) {
        return ((FeatureMap.Internal) getMixed()).basicAdd(
                diPackage.Literals.DOCUMENT_ROOT__DIAGRAM, newDiagram, msgs);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setDiagram(Diagram newDiagram) {
        ((FeatureMap.Internal) getMixed()).set(
                diPackage.Literals.DOCUMENT_ROOT__DIAGRAM, newDiagram);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public Node getNode() {
        return (Node) getMixed().get(diPackage.Literals.DOCUMENT_ROOT__NODE,
                true);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public NotificationChain basicSetNode(Node newNode, NotificationChain msgs) {
        return ((FeatureMap.Internal) getMixed()).basicAdd(
                diPackage.Literals.DOCUMENT_ROOT__NODE, newNode, msgs);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setNode(Node newNode) {
        ((FeatureMap.Internal) getMixed()).set(
                diPackage.Literals.DOCUMENT_ROOT__NODE, newNode);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public Style getStyle() {
        return (Style) getMixed().get(diPackage.Literals.DOCUMENT_ROOT__STYLE,
                true);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public NotificationChain basicSetStyle(Style newStyle,
            NotificationChain msgs) {
        return ((FeatureMap.Internal) getMixed()).basicAdd(
                diPackage.Literals.DOCUMENT_ROOT__STYLE, newStyle, msgs);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setStyle(Style newStyle) {
        ((FeatureMap.Internal) getMixed()).set(
                diPackage.Literals.DOCUMENT_ROOT__STYLE, newStyle);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public NotificationChain eInverseRemove(InternalEObject otherEnd,
            int featureID, NotificationChain msgs) {
        switch (featureID) {
        case diPackage.DOCUMENT_ROOT__MIXED:
            return ((InternalEList<?>) getMixed()).basicRemove(otherEnd, msgs);
        case diPackage.DOCUMENT_ROOT__XMLNS_PREFIX_MAP:
            return ((InternalEList<?>) getXMLNSPrefixMap()).basicRemove(
                    otherEnd, msgs);
        case diPackage.DOCUMENT_ROOT__XSI_SCHEMA_LOCATION:
            return ((InternalEList<?>) getXSISchemaLocation()).basicRemove(
                    otherEnd, msgs);
        case diPackage.DOCUMENT_ROOT__BENDPOINT:
            return basicSetBendpoint(null, msgs);
        case diPackage.DOCUMENT_ROOT__CONNECTOR:
            return basicSetConnector(null, msgs);
        case diPackage.DOCUMENT_ROOT__VIEW:
            return basicSetView(null, msgs);
        case diPackage.DOCUMENT_ROOT__DIAGRAM:
            return basicSetDiagram(null, msgs);
        case diPackage.DOCUMENT_ROOT__NODE:
            return basicSetNode(null, msgs);
        case diPackage.DOCUMENT_ROOT__STYLE:
            return basicSetStyle(null, msgs);
        }
        return super.eInverseRemove(otherEnd, featureID, msgs);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Object eGet(int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
        case diPackage.DOCUMENT_ROOT__MIXED:
            if (coreType)
                return getMixed();
            return ((FeatureMap.Internal) getMixed()).getWrapper();
        case diPackage.DOCUMENT_ROOT__XMLNS_PREFIX_MAP:
            if (coreType)
                return getXMLNSPrefixMap();
            else
                return getXMLNSPrefixMap().map();
        case diPackage.DOCUMENT_ROOT__XSI_SCHEMA_LOCATION:
            if (coreType)
                return getXSISchemaLocation();
            else
                return getXSISchemaLocation().map();
        case diPackage.DOCUMENT_ROOT__BENDPOINT:
            return getBendpoint();
        case diPackage.DOCUMENT_ROOT__CONNECTOR:
            return getConnector();
        case diPackage.DOCUMENT_ROOT__VIEW:
            return getView();
        case diPackage.DOCUMENT_ROOT__DIAGRAM:
            return getDiagram();
        case diPackage.DOCUMENT_ROOT__NODE:
            return getNode();
        case diPackage.DOCUMENT_ROOT__STYLE:
            return getStyle();
        }
        return super.eGet(featureID, resolve, coreType);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void eSet(int featureID, Object newValue) {
        switch (featureID) {
        case diPackage.DOCUMENT_ROOT__MIXED:
            ((FeatureMap.Internal) getMixed()).set(newValue);
            return;
        case diPackage.DOCUMENT_ROOT__XMLNS_PREFIX_MAP:
            ((EStructuralFeature.Setting) getXMLNSPrefixMap()).set(newValue);
            return;
        case diPackage.DOCUMENT_ROOT__XSI_SCHEMA_LOCATION:
            ((EStructuralFeature.Setting) getXSISchemaLocation()).set(newValue);
            return;
        case diPackage.DOCUMENT_ROOT__BENDPOINT:
            setBendpoint((Bendpoint) newValue);
            return;
        case diPackage.DOCUMENT_ROOT__CONNECTOR:
            setConnector((Connector) newValue);
            return;
        case diPackage.DOCUMENT_ROOT__VIEW:
            setView((View) newValue);
            return;
        case diPackage.DOCUMENT_ROOT__DIAGRAM:
            setDiagram((Diagram) newValue);
            return;
        case diPackage.DOCUMENT_ROOT__NODE:
            setNode((Node) newValue);
            return;
        case diPackage.DOCUMENT_ROOT__STYLE:
            setStyle((Style) newValue);
            return;
        }
        super.eSet(featureID, newValue);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void eUnset(int featureID) {
        switch (featureID) {
        case diPackage.DOCUMENT_ROOT__MIXED:
            getMixed().clear();
            return;
        case diPackage.DOCUMENT_ROOT__XMLNS_PREFIX_MAP:
            getXMLNSPrefixMap().clear();
            return;
        case diPackage.DOCUMENT_ROOT__XSI_SCHEMA_LOCATION:
            getXSISchemaLocation().clear();
            return;
        case diPackage.DOCUMENT_ROOT__BENDPOINT:
            setBendpoint((Bendpoint) null);
            return;
        case diPackage.DOCUMENT_ROOT__CONNECTOR:
            setConnector((Connector) null);
            return;
        case diPackage.DOCUMENT_ROOT__VIEW:
            setView((View) null);
            return;
        case diPackage.DOCUMENT_ROOT__DIAGRAM:
            setDiagram((Diagram) null);
            return;
        case diPackage.DOCUMENT_ROOT__NODE:
            setNode((Node) null);
            return;
        case diPackage.DOCUMENT_ROOT__STYLE:
            setStyle((Style) null);
            return;
        }
        super.eUnset(featureID);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public boolean eIsSet(int featureID) {
        switch (featureID) {
        case diPackage.DOCUMENT_ROOT__MIXED:
            return mixed != null && !mixed.isEmpty();
        case diPackage.DOCUMENT_ROOT__XMLNS_PREFIX_MAP:
            return xMLNSPrefixMap != null && !xMLNSPrefixMap.isEmpty();
        case diPackage.DOCUMENT_ROOT__XSI_SCHEMA_LOCATION:
            return xSISchemaLocation != null && !xSISchemaLocation.isEmpty();
        case diPackage.DOCUMENT_ROOT__BENDPOINT:
            return getBendpoint() != null;
        case diPackage.DOCUMENT_ROOT__CONNECTOR:
            return getConnector() != null;
        case diPackage.DOCUMENT_ROOT__VIEW:
            return getView() != null;
        case diPackage.DOCUMENT_ROOT__DIAGRAM:
            return getDiagram() != null;
        case diPackage.DOCUMENT_ROOT__NODE:
            return getNode() != null;
        case diPackage.DOCUMENT_ROOT__STYLE:
            return getStyle() != null;
        }
        return super.eIsSet(featureID);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public String toString() {
        if (eIsProxy())
            return super.toString();

        StringBuffer result = new StringBuffer(super.toString());
        result.append(" (mixed: "); //$NON-NLS-1$
        result.append(mixed);
        result.append(')');
        return result.toString();
    }

} //DocumentRootImpl
