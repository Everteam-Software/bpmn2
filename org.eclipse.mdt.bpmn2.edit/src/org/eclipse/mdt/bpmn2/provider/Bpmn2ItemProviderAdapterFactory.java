/**
 * Copyright (c) 2009, Intalio Inc.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *  
 * Contributors:
 *    Intalio Inc. - initial API and implementation
 * 
 *
 * $Id$
 */
package org.eclipse.mdt.bpmn2.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.mdt.bpmn2.util.Bpmn2AdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class Bpmn2ItemProviderAdapterFactory extends Bpmn2AdapterFactory
        implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public static final String copyright = "Copyright (c) 2009, Intalio Inc.\nAll rights reserved. This program and the accompanying materials\nare made available under the terms of the Eclipse Public License v1.0\nwhich accompanies this distribution, and is available at\nhttp://www.eclipse.org/legal/epl-v10.html\n \nContributors:\n   Intalio Inc. - initial API and implementation\n";

    /**
     * This keeps track of the root adapter factory that delegates to this adapter factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ComposedAdapterFactory parentAdapterFactory;

    /**
     * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected IChangeNotifier changeNotifier = new ChangeNotifier();

    /**
     * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected Collection<Object> supportedTypes = new ArrayList<Object>();

    /**
     * This constructs an instance.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public Bpmn2ItemProviderAdapterFactory() {
        supportedTypes.add(IEditingDomainItemProvider.class);
        supportedTypes.add(IStructuredItemContentProvider.class);
        supportedTypes.add(ITreeItemContentProvider.class);
        supportedTypes.add(IItemLabelProvider.class);
        supportedTypes.add(IItemPropertySource.class);
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.DocumentRoot} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DocumentRootItemProvider documentRootItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.DocumentRoot}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDocumentRootAdapter() {
        if (documentRootItemProvider == null) {
            documentRootItemProvider = new DocumentRootItemProvider(this);
        }

        return documentRootItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.AdHocSubProcess} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AdHocSubProcessItemProvider adHocSubProcessItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.AdHocSubProcess}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAdHocSubProcessAdapter() {
        if (adHocSubProcessItemProvider == null) {
            adHocSubProcessItemProvider = new AdHocSubProcessItemProvider(this);
        }

        return adHocSubProcessItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Assignment} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AssignmentItemProvider assignmentItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Assignment}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAssignmentAdapter() {
        if (assignmentItemProvider == null) {
            assignmentItemProvider = new AssignmentItemProvider(this);
        }

        return assignmentItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Association} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AssociationItemProvider associationItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Association}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAssociationAdapter() {
        if (associationItemProvider == null) {
            associationItemProvider = new AssociationItemProvider(this);
        }

        return associationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Auditing} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AuditingItemProvider auditingItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Auditing}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAuditingAdapter() {
        if (auditingItemProvider == null) {
            auditingItemProvider = new AuditingItemProvider(this);
        }

        return auditingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.BoundaryEvent} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected BoundaryEventItemProvider boundaryEventItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.BoundaryEvent}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createBoundaryEventAdapter() {
        if (boundaryEventItemProvider == null) {
            boundaryEventItemProvider = new BoundaryEventItemProvider(this);
        }

        return boundaryEventItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.BusinessRuleTask} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected BusinessRuleTaskItemProvider businessRuleTaskItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.BusinessRuleTask}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createBusinessRuleTaskAdapter() {
        if (businessRuleTaskItemProvider == null) {
            businessRuleTaskItemProvider = new BusinessRuleTaskItemProvider(
                    this);
        }

        return businessRuleTaskItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.CallableElement} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CallableElementItemProvider callableElementItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.CallableElement}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCallableElementAdapter() {
        if (callableElementItemProvider == null) {
            callableElementItemProvider = new CallableElementItemProvider(this);
        }

        return callableElementItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.CallActivity} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CallActivityItemProvider callActivityItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.CallActivity}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCallActivityAdapter() {
        if (callActivityItemProvider == null) {
            callActivityItemProvider = new CallActivityItemProvider(this);
        }

        return callActivityItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.CallChoreographyActivity} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CallChoreographyActivityItemProvider callChoreographyActivityItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.CallChoreographyActivity}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCallChoreographyActivityAdapter() {
        if (callChoreographyActivityItemProvider == null) {
            callChoreographyActivityItemProvider = new CallChoreographyActivityItemProvider(
                    this);
        }

        return callChoreographyActivityItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.CancelEventDefinition} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CancelEventDefinitionItemProvider cancelEventDefinitionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.CancelEventDefinition}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCancelEventDefinitionAdapter() {
        if (cancelEventDefinitionItemProvider == null) {
            cancelEventDefinitionItemProvider = new CancelEventDefinitionItemProvider(
                    this);
        }

        return cancelEventDefinitionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Category} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CategoryItemProvider categoryItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Category}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCategoryAdapter() {
        if (categoryItemProvider == null) {
            categoryItemProvider = new CategoryItemProvider(this);
        }

        return categoryItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.CategoryValue} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CategoryValueItemProvider categoryValueItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.CategoryValue}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCategoryValueAdapter() {
        if (categoryValueItemProvider == null) {
            categoryValueItemProvider = new CategoryValueItemProvider(this);
        }

        return categoryValueItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Choreography} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ChoreographyItemProvider choreographyItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Choreography}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createChoreographyAdapter() {
        if (choreographyItemProvider == null) {
            choreographyItemProvider = new ChoreographyItemProvider(this);
        }

        return choreographyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.ChoreographySubProcess} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ChoreographySubProcessItemProvider choreographySubProcessItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.ChoreographySubProcess}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createChoreographySubProcessAdapter() {
        if (choreographySubProcessItemProvider == null) {
            choreographySubProcessItemProvider = new ChoreographySubProcessItemProvider(
                    this);
        }

        return choreographySubProcessItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.ChoreographyTask} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ChoreographyTaskItemProvider choreographyTaskItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.ChoreographyTask}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createChoreographyTaskAdapter() {
        if (choreographyTaskItemProvider == null) {
            choreographyTaskItemProvider = new ChoreographyTaskItemProvider(
                    this);
        }

        return choreographyTaskItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Collaboration} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CollaborationItemProvider collaborationItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Collaboration}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCollaborationAdapter() {
        if (collaborationItemProvider == null) {
            collaborationItemProvider = new CollaborationItemProvider(this);
        }

        return collaborationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.CompensateEventDefinition} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CompensateEventDefinitionItemProvider compensateEventDefinitionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.CompensateEventDefinition}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCompensateEventDefinitionAdapter() {
        if (compensateEventDefinitionItemProvider == null) {
            compensateEventDefinitionItemProvider = new CompensateEventDefinitionItemProvider(
                    this);
        }

        return compensateEventDefinitionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.ComplexGateway} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ComplexGatewayItemProvider complexGatewayItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.ComplexGateway}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createComplexGatewayAdapter() {
        if (complexGatewayItemProvider == null) {
            complexGatewayItemProvider = new ComplexGatewayItemProvider(this);
        }

        return complexGatewayItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.ConditionalEventDefinition} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ConditionalEventDefinitionItemProvider conditionalEventDefinitionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.ConditionalEventDefinition}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createConditionalEventDefinitionAdapter() {
        if (conditionalEventDefinitionItemProvider == null) {
            conditionalEventDefinitionItemProvider = new ConditionalEventDefinitionItemProvider(
                    this);
        }

        return conditionalEventDefinitionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Conversation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ConversationItemProvider conversationItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Conversation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createConversationAdapter() {
        if (conversationItemProvider == null) {
            conversationItemProvider = new ConversationItemProvider(this);
        }

        return conversationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.ConversationLink} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ConversationLinkItemProvider conversationLinkItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.ConversationLink}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createConversationLinkAdapter() {
        if (conversationLinkItemProvider == null) {
            conversationLinkItemProvider = new ConversationLinkItemProvider(
                    this);
        }

        return conversationLinkItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.ConversationView} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ConversationViewItemProvider conversationViewItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.ConversationView}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createConversationViewAdapter() {
        if (conversationViewItemProvider == null) {
            conversationViewItemProvider = new ConversationViewItemProvider(
                    this);
        }

        return conversationViewItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.CorrelationKey} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CorrelationKeyItemProvider correlationKeyItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.CorrelationKey}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCorrelationKeyAdapter() {
        if (correlationKeyItemProvider == null) {
            correlationKeyItemProvider = new CorrelationKeyItemProvider(this);
        }

        return correlationKeyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.CorrelationProperty} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CorrelationPropertyItemProvider correlationPropertyItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.CorrelationProperty}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCorrelationPropertyAdapter() {
        if (correlationPropertyItemProvider == null) {
            correlationPropertyItemProvider = new CorrelationPropertyItemProvider(
                    this);
        }

        return correlationPropertyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.CorrelationPropertyRetrievalExpression} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CorrelationPropertyRetrievalExpressionItemProvider correlationPropertyRetrievalExpressionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.CorrelationPropertyRetrievalExpression}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCorrelationPropertyRetrievalExpressionAdapter() {
        if (correlationPropertyRetrievalExpressionItemProvider == null) {
            correlationPropertyRetrievalExpressionItemProvider = new CorrelationPropertyRetrievalExpressionItemProvider(
                    this);
        }

        return correlationPropertyRetrievalExpressionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.CorrelationSet} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CorrelationSetItemProvider correlationSetItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.CorrelationSet}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCorrelationSetAdapter() {
        if (correlationSetItemProvider == null) {
            correlationSetItemProvider = new CorrelationSetItemProvider(this);
        }

        return correlationSetItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.DataInput} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DataInputItemProvider dataInputItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.DataInput}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDataInputAdapter() {
        if (dataInputItemProvider == null) {
            dataInputItemProvider = new DataInputItemProvider(this);
        }

        return dataInputItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.DataInputAssociation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DataInputAssociationItemProvider dataInputAssociationItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.DataInputAssociation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDataInputAssociationAdapter() {
        if (dataInputAssociationItemProvider == null) {
            dataInputAssociationItemProvider = new DataInputAssociationItemProvider(
                    this);
        }

        return dataInputAssociationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.DataObject} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DataObjectItemProvider dataObjectItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.DataObject}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDataObjectAdapter() {
        if (dataObjectItemProvider == null) {
            dataObjectItemProvider = new DataObjectItemProvider(this);
        }

        return dataObjectItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.DataObjectState} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DataObjectStateItemProvider dataObjectStateItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.DataObjectState}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDataObjectStateAdapter() {
        if (dataObjectStateItemProvider == null) {
            dataObjectStateItemProvider = new DataObjectStateItemProvider(this);
        }

        return dataObjectStateItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.DataOutput} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DataOutputItemProvider dataOutputItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.DataOutput}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDataOutputAdapter() {
        if (dataOutputItemProvider == null) {
            dataOutputItemProvider = new DataOutputItemProvider(this);
        }

        return dataOutputItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.DataOutputAssociation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DataOutputAssociationItemProvider dataOutputAssociationItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.DataOutputAssociation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDataOutputAssociationAdapter() {
        if (dataOutputAssociationItemProvider == null) {
            dataOutputAssociationItemProvider = new DataOutputAssociationItemProvider(
                    this);
        }

        return dataOutputAssociationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Definitions} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DefinitionsItemProvider definitionsItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Definitions}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDefinitionsAdapter() {
        if (definitionsItemProvider == null) {
            definitionsItemProvider = new DefinitionsItemProvider(this);
        }

        return definitionsItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Documentation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DocumentationItemProvider documentationItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Documentation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDocumentationAdapter() {
        if (documentationItemProvider == null) {
            documentationItemProvider = new DocumentationItemProvider(this);
        }

        return documentationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.EndEvent} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EndEventItemProvider endEventItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.EndEvent}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEndEventAdapter() {
        if (endEventItemProvider == null) {
            endEventItemProvider = new EndEventItemProvider(this);
        }

        return endEventItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.EndPoint} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EndPointItemProvider endPointItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.EndPoint}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEndPointAdapter() {
        if (endPointItemProvider == null) {
            endPointItemProvider = new EndPointItemProvider(this);
        }

        return endPointItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Entity} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EntityItemProvider entityItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Entity}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEntityAdapter() {
        if (entityItemProvider == null) {
            entityItemProvider = new EntityItemProvider(this);
        }

        return entityItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Error} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ErrorItemProvider errorItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Error}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createErrorAdapter() {
        if (errorItemProvider == null) {
            errorItemProvider = new ErrorItemProvider(this);
        }

        return errorItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.ErrorEventDefinition} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ErrorEventDefinitionItemProvider errorEventDefinitionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.ErrorEventDefinition}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createErrorEventDefinitionAdapter() {
        if (errorEventDefinitionItemProvider == null) {
            errorEventDefinitionItemProvider = new ErrorEventDefinitionItemProvider(
                    this);
        }

        return errorEventDefinitionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Escalation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EscalationItemProvider escalationItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Escalation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEscalationAdapter() {
        if (escalationItemProvider == null) {
            escalationItemProvider = new EscalationItemProvider(this);
        }

        return escalationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.EscalationEventDefinition} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EscalationEventDefinitionItemProvider escalationEventDefinitionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.EscalationEventDefinition}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEscalationEventDefinitionAdapter() {
        if (escalationEventDefinitionItemProvider == null) {
            escalationEventDefinitionItemProvider = new EscalationEventDefinitionItemProvider(
                    this);
        }

        return escalationEventDefinitionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.EventBasedGateway} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EventBasedGatewayItemProvider eventBasedGatewayItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.EventBasedGateway}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEventBasedGatewayAdapter() {
        if (eventBasedGatewayItemProvider == null) {
            eventBasedGatewayItemProvider = new EventBasedGatewayItemProvider(
                    this);
        }

        return eventBasedGatewayItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.ExclusiveGateway} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ExclusiveGatewayItemProvider exclusiveGatewayItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.ExclusiveGateway}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createExclusiveGatewayAdapter() {
        if (exclusiveGatewayItemProvider == null) {
            exclusiveGatewayItemProvider = new ExclusiveGatewayItemProvider(
                    this);
        }

        return exclusiveGatewayItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Expression} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ExpressionItemProvider expressionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Expression}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createExpressionAdapter() {
        if (expressionItemProvider == null) {
            expressionItemProvider = new ExpressionItemProvider(this);
        }

        return expressionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Extension} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ExtensionItemProvider extensionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Extension}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createExtensionAdapter() {
        if (extensionItemProvider == null) {
            extensionItemProvider = new ExtensionItemProvider(this);
        }

        return extensionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.FormalExpression} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected FormalExpressionItemProvider formalExpressionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.FormalExpression}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createFormalExpressionAdapter() {
        if (formalExpressionItemProvider == null) {
            formalExpressionItemProvider = new FormalExpressionItemProvider(
                    this);
        }

        return formalExpressionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Gateway} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected GatewayItemProvider gatewayItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Gateway}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createGatewayAdapter() {
        if (gatewayItemProvider == null) {
            gatewayItemProvider = new GatewayItemProvider(this);
        }

        return gatewayItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.GlobalBusinessRuleTask} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected GlobalBusinessRuleTaskItemProvider globalBusinessRuleTaskItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.GlobalBusinessRuleTask}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createGlobalBusinessRuleTaskAdapter() {
        if (globalBusinessRuleTaskItemProvider == null) {
            globalBusinessRuleTaskItemProvider = new GlobalBusinessRuleTaskItemProvider(
                    this);
        }

        return globalBusinessRuleTaskItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.GlobalChoreographyTask} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected GlobalChoreographyTaskItemProvider globalChoreographyTaskItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.GlobalChoreographyTask}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createGlobalChoreographyTaskAdapter() {
        if (globalChoreographyTaskItemProvider == null) {
            globalChoreographyTaskItemProvider = new GlobalChoreographyTaskItemProvider(
                    this);
        }

        return globalChoreographyTaskItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.GlobalManualTask} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected GlobalManualTaskItemProvider globalManualTaskItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.GlobalManualTask}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createGlobalManualTaskAdapter() {
        if (globalManualTaskItemProvider == null) {
            globalManualTaskItemProvider = new GlobalManualTaskItemProvider(
                    this);
        }

        return globalManualTaskItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.GlobalScriptTask} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected GlobalScriptTaskItemProvider globalScriptTaskItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.GlobalScriptTask}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createGlobalScriptTaskAdapter() {
        if (globalScriptTaskItemProvider == null) {
            globalScriptTaskItemProvider = new GlobalScriptTaskItemProvider(
                    this);
        }

        return globalScriptTaskItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.GlobalTask} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected GlobalTaskItemProvider globalTaskItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.GlobalTask}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createGlobalTaskAdapter() {
        if (globalTaskItemProvider == null) {
            globalTaskItemProvider = new GlobalTaskItemProvider(this);
        }

        return globalTaskItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.GlobalUserTask} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected GlobalUserTaskItemProvider globalUserTaskItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.GlobalUserTask}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createGlobalUserTaskAdapter() {
        if (globalUserTaskItemProvider == null) {
            globalUserTaskItemProvider = new GlobalUserTaskItemProvider(this);
        }

        return globalUserTaskItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Group} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected GroupItemProvider groupItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Group}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createGroupAdapter() {
        if (groupItemProvider == null) {
            groupItemProvider = new GroupItemProvider(this);
        }

        return groupItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Handler} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected HandlerItemProvider handlerItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Handler}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createHandlerAdapter() {
        if (handlerItemProvider == null) {
            handlerItemProvider = new HandlerItemProvider(this);
        }

        return handlerItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.HumanPerformer} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected HumanPerformerItemProvider humanPerformerItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.HumanPerformer}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createHumanPerformerAdapter() {
        if (humanPerformerItemProvider == null) {
            humanPerformerItemProvider = new HumanPerformerItemProvider(this);
        }

        return humanPerformerItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Import} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ImportItemProvider importItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Import}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createImportAdapter() {
        if (importItemProvider == null) {
            importItemProvider = new ImportItemProvider(this);
        }

        return importItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.InclusiveGateway} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected InclusiveGatewayItemProvider inclusiveGatewayItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.InclusiveGateway}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createInclusiveGatewayAdapter() {
        if (inclusiveGatewayItemProvider == null) {
            inclusiveGatewayItemProvider = new InclusiveGatewayItemProvider(
                    this);
        }

        return inclusiveGatewayItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.InputOutputBinding} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected InputOutputBindingItemProvider inputOutputBindingItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.InputOutputBinding}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createInputOutputBindingAdapter() {
        if (inputOutputBindingItemProvider == null) {
            inputOutputBindingItemProvider = new InputOutputBindingItemProvider(
                    this);
        }

        return inputOutputBindingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.InputOutputSpecification} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected InputOutputSpecificationItemProvider inputOutputSpecificationItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.InputOutputSpecification}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createInputOutputSpecificationAdapter() {
        if (inputOutputSpecificationItemProvider == null) {
            inputOutputSpecificationItemProvider = new InputOutputSpecificationItemProvider(
                    this);
        }

        return inputOutputSpecificationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.InputSet} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected InputSetItemProvider inputSetItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.InputSet}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createInputSetAdapter() {
        if (inputSetItemProvider == null) {
            inputSetItemProvider = new InputSetItemProvider(this);
        }

        return inputSetItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Interface} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected InterfaceItemProvider interfaceItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Interface}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createInterfaceAdapter() {
        if (interfaceItemProvider == null) {
            interfaceItemProvider = new InterfaceItemProvider(this);
        }

        return interfaceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.IntermediateCatchEvent} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected IntermediateCatchEventItemProvider intermediateCatchEventItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.IntermediateCatchEvent}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createIntermediateCatchEventAdapter() {
        if (intermediateCatchEventItemProvider == null) {
            intermediateCatchEventItemProvider = new IntermediateCatchEventItemProvider(
                    this);
        }

        return intermediateCatchEventItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.IntermediateThrowEvent} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected IntermediateThrowEventItemProvider intermediateThrowEventItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.IntermediateThrowEvent}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createIntermediateThrowEventAdapter() {
        if (intermediateThrowEventItemProvider == null) {
            intermediateThrowEventItemProvider = new IntermediateThrowEventItemProvider(
                    this);
        }

        return intermediateThrowEventItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Lane} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LaneItemProvider laneItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Lane}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLaneAdapter() {
        if (laneItemProvider == null) {
            laneItemProvider = new LaneItemProvider(this);
        }

        return laneItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.LaneSet} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LaneSetItemProvider laneSetItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.LaneSet}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLaneSetAdapter() {
        if (laneSetItemProvider == null) {
            laneSetItemProvider = new LaneSetItemProvider(this);
        }

        return laneSetItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.LinkEventDefinition} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LinkEventDefinitionItemProvider linkEventDefinitionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.LinkEventDefinition}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLinkEventDefinitionAdapter() {
        if (linkEventDefinitionItemProvider == null) {
            linkEventDefinitionItemProvider = new LinkEventDefinitionItemProvider(
                    this);
        }

        return linkEventDefinitionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.ManualTask} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ManualTaskItemProvider manualTaskItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.ManualTask}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createManualTaskAdapter() {
        if (manualTaskItemProvider == null) {
            manualTaskItemProvider = new ManualTaskItemProvider(this);
        }

        return manualTaskItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Message} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected MessageItemProvider messageItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Message}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMessageAdapter() {
        if (messageItemProvider == null) {
            messageItemProvider = new MessageItemProvider(this);
        }

        return messageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.MessageEventDefinition} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected MessageEventDefinitionItemProvider messageEventDefinitionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.MessageEventDefinition}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMessageEventDefinitionAdapter() {
        if (messageEventDefinitionItemProvider == null) {
            messageEventDefinitionItemProvider = new MessageEventDefinitionItemProvider(
                    this);
        }

        return messageEventDefinitionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.MessageFlow} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected MessageFlowItemProvider messageFlowItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.MessageFlow}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMessageFlowAdapter() {
        if (messageFlowItemProvider == null) {
            messageFlowItemProvider = new MessageFlowItemProvider(this);
        }

        return messageFlowItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Monitoring} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected MonitoringItemProvider monitoringItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Monitoring}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMonitoringAdapter() {
        if (monitoringItemProvider == null) {
            monitoringItemProvider = new MonitoringItemProvider(this);
        }

        return monitoringItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.MultiInstanceLoopCharacteristics} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected MultiInstanceLoopCharacteristicsItemProvider multiInstanceLoopCharacteristicsItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.MultiInstanceLoopCharacteristics}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMultiInstanceLoopCharacteristicsAdapter() {
        if (multiInstanceLoopCharacteristicsItemProvider == null) {
            multiInstanceLoopCharacteristicsItemProvider = new MultiInstanceLoopCharacteristicsItemProvider(
                    this);
        }

        return multiInstanceLoopCharacteristicsItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Operation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OperationItemProvider operationItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Operation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOperationAdapter() {
        if (operationItemProvider == null) {
            operationItemProvider = new OperationItemProvider(this);
        }

        return operationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.OutputSet} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OutputSetItemProvider outputSetItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.OutputSet}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOutputSetAdapter() {
        if (outputSetItemProvider == null) {
            outputSetItemProvider = new OutputSetItemProvider(this);
        }

        return outputSetItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.ParallelGateway} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ParallelGatewayItemProvider parallelGatewayItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.ParallelGateway}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createParallelGatewayAdapter() {
        if (parallelGatewayItemProvider == null) {
            parallelGatewayItemProvider = new ParallelGatewayItemProvider(this);
        }

        return parallelGatewayItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Parameter} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ParameterItemProvider parameterItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Parameter}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createParameterAdapter() {
        if (parameterItemProvider == null) {
            parameterItemProvider = new ParameterItemProvider(this);
        }

        return parameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.ParameterBinding} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ParameterBindingItemProvider parameterBindingItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.ParameterBinding}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createParameterBindingAdapter() {
        if (parameterBindingItemProvider == null) {
            parameterBindingItemProvider = new ParameterBindingItemProvider(
                    this);
        }

        return parameterBindingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Participant} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ParticipantItemProvider participantItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Participant}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createParticipantAdapter() {
        if (participantItemProvider == null) {
            participantItemProvider = new ParticipantItemProvider(this);
        }

        return participantItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.ParticipantMultiplicity} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ParticipantMultiplicityItemProvider participantMultiplicityItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.ParticipantMultiplicity}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createParticipantMultiplicityAdapter() {
        if (participantMultiplicityItemProvider == null) {
            participantMultiplicityItemProvider = new ParticipantMultiplicityItemProvider(
                    this);
        }

        return participantMultiplicityItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.PeopleAssignment} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PeopleAssignmentItemProvider peopleAssignmentItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.PeopleAssignment}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPeopleAssignmentAdapter() {
        if (peopleAssignmentItemProvider == null) {
            peopleAssignmentItemProvider = new PeopleAssignmentItemProvider(
                    this);
        }

        return peopleAssignmentItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.PeopleAssignmentExpression} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PeopleAssignmentExpressionItemProvider peopleAssignmentExpressionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.PeopleAssignmentExpression}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPeopleAssignmentExpressionAdapter() {
        if (peopleAssignmentExpressionItemProvider == null) {
            peopleAssignmentExpressionItemProvider = new PeopleAssignmentExpressionItemProvider(
                    this);
        }

        return peopleAssignmentExpressionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.PeopleAssignmentLiteral} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PeopleAssignmentLiteralItemProvider peopleAssignmentLiteralItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.PeopleAssignmentLiteral}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPeopleAssignmentLiteralAdapter() {
        if (peopleAssignmentLiteralItemProvider == null) {
            peopleAssignmentLiteralItemProvider = new PeopleAssignmentLiteralItemProvider(
                    this);
        }

        return peopleAssignmentLiteralItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.PeopleAssignmentPeopleGroup} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PeopleAssignmentPeopleGroupItemProvider peopleAssignmentPeopleGroupItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.PeopleAssignmentPeopleGroup}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPeopleAssignmentPeopleGroupAdapter() {
        if (peopleAssignmentPeopleGroupItemProvider == null) {
            peopleAssignmentPeopleGroupItemProvider = new PeopleAssignmentPeopleGroupItemProvider(
                    this);
        }

        return peopleAssignmentPeopleGroupItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.PeopleGroup} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PeopleGroupItemProvider peopleGroupItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.PeopleGroup}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPeopleGroupAdapter() {
        if (peopleGroupItemProvider == null) {
            peopleGroupItemProvider = new PeopleGroupItemProvider(this);
        }

        return peopleGroupItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Performer} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PerformerItemProvider performerItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Performer}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPerformerAdapter() {
        if (performerItemProvider == null) {
            performerItemProvider = new PerformerItemProvider(this);
        }

        return performerItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.PotentialOwner} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PotentialOwnerItemProvider potentialOwnerItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.PotentialOwner}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPotentialOwnerAdapter() {
        if (potentialOwnerItemProvider == null) {
            potentialOwnerItemProvider = new PotentialOwnerItemProvider(this);
        }

        return potentialOwnerItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Process} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ProcessItemProvider processItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Process}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createProcessAdapter() {
        if (processItemProvider == null) {
            processItemProvider = new ProcessItemProvider(this);
        }

        return processItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.ProcessRole} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ProcessRoleItemProvider processRoleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.ProcessRole}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createProcessRoleAdapter() {
        if (processRoleItemProvider == null) {
            processRoleItemProvider = new ProcessRoleItemProvider(this);
        }

        return processRoleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Property} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PropertyItemProvider propertyItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Property}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPropertyAdapter() {
        if (propertyItemProvider == null) {
            propertyItemProvider = new PropertyItemProvider(this);
        }

        return propertyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.ReceiveTask} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ReceiveTaskItemProvider receiveTaskItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.ReceiveTask}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createReceiveTaskAdapter() {
        if (receiveTaskItemProvider == null) {
            receiveTaskItemProvider = new ReceiveTaskItemProvider(this);
        }

        return receiveTaskItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Relationship} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RelationshipItemProvider relationshipItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Relationship}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRelationshipAdapter() {
        if (relationshipItemProvider == null) {
            relationshipItemProvider = new RelationshipItemProvider(this);
        }

        return relationshipItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Rendering} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RenderingItemProvider renderingItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Rendering}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRenderingAdapter() {
        if (renderingItemProvider == null) {
            renderingItemProvider = new RenderingItemProvider(this);
        }

        return renderingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Role} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RoleItemProvider roleItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Role}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRoleAdapter() {
        if (roleItemProvider == null) {
            roleItemProvider = new RoleItemProvider(this);
        }

        return roleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Script} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ScriptItemProvider scriptItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Script}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createScriptAdapter() {
        if (scriptItemProvider == null) {
            scriptItemProvider = new ScriptItemProvider(this);
        }

        return scriptItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.ScriptTask} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ScriptTaskItemProvider scriptTaskItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.ScriptTask}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createScriptTaskAdapter() {
        if (scriptTaskItemProvider == null) {
            scriptTaskItemProvider = new ScriptTaskItemProvider(this);
        }

        return scriptTaskItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.SendTask} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SendTaskItemProvider sendTaskItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.SendTask}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSendTaskAdapter() {
        if (sendTaskItemProvider == null) {
            sendTaskItemProvider = new SendTaskItemProvider(this);
        }

        return sendTaskItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.SequenceFlow} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SequenceFlowItemProvider sequenceFlowItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.SequenceFlow}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSequenceFlowAdapter() {
        if (sequenceFlowItemProvider == null) {
            sequenceFlowItemProvider = new SequenceFlowItemProvider(this);
        }

        return sequenceFlowItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.ServiceReference} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ServiceReferenceItemProvider serviceReferenceItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.ServiceReference}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createServiceReferenceAdapter() {
        if (serviceReferenceItemProvider == null) {
            serviceReferenceItemProvider = new ServiceReferenceItemProvider(
                    this);
        }

        return serviceReferenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.ServiceTask} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ServiceTaskItemProvider serviceTaskItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.ServiceTask}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createServiceTaskAdapter() {
        if (serviceTaskItemProvider == null) {
            serviceTaskItemProvider = new ServiceTaskItemProvider(this);
        }

        return serviceTaskItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Signal} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SignalItemProvider signalItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Signal}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSignalAdapter() {
        if (signalItemProvider == null) {
            signalItemProvider = new SignalItemProvider(this);
        }

        return signalItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.SignalEventDefinition} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SignalEventDefinitionItemProvider signalEventDefinitionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.SignalEventDefinition}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSignalEventDefinitionAdapter() {
        if (signalEventDefinitionItemProvider == null) {
            signalEventDefinitionItemProvider = new SignalEventDefinitionItemProvider(
                    this);
        }

        return signalEventDefinitionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.StandardLoopCharacteristics} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected StandardLoopCharacteristicsItemProvider standardLoopCharacteristicsItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.StandardLoopCharacteristics}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createStandardLoopCharacteristicsAdapter() {
        if (standardLoopCharacteristicsItemProvider == null) {
            standardLoopCharacteristicsItemProvider = new StandardLoopCharacteristicsItemProvider(
                    this);
        }

        return standardLoopCharacteristicsItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.StartEvent} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected StartEventItemProvider startEventItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.StartEvent}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createStartEventAdapter() {
        if (startEventItemProvider == null) {
            startEventItemProvider = new StartEventItemProvider(this);
        }

        return startEventItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.StructureDefinition} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected StructureDefinitionItemProvider structureDefinitionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.StructureDefinition}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createStructureDefinitionAdapter() {
        if (structureDefinitionItemProvider == null) {
            structureDefinitionItemProvider = new StructureDefinitionItemProvider(
                    this);
        }

        return structureDefinitionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.SubProcess} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SubProcessItemProvider subProcessItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.SubProcess}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSubProcessAdapter() {
        if (subProcessItemProvider == null) {
            subProcessItemProvider = new SubProcessItemProvider(this);
        }

        return subProcessItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Task} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TaskItemProvider taskItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Task}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTaskAdapter() {
        if (taskItemProvider == null) {
            taskItemProvider = new TaskItemProvider(this);
        }

        return taskItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.TerminateEventDefinition} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TerminateEventDefinitionItemProvider terminateEventDefinitionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.TerminateEventDefinition}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTerminateEventDefinitionAdapter() {
        if (terminateEventDefinitionItemProvider == null) {
            terminateEventDefinitionItemProvider = new TerminateEventDefinitionItemProvider(
                    this);
        }

        return terminateEventDefinitionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Text} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TextItemProvider textItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Text}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTextAdapter() {
        if (textItemProvider == null) {
            textItemProvider = new TextItemProvider(this);
        }

        return textItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.TextAnnotation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TextAnnotationItemProvider textAnnotationItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.TextAnnotation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTextAnnotationAdapter() {
        if (textAnnotationItemProvider == null) {
            textAnnotationItemProvider = new TextAnnotationItemProvider(this);
        }

        return textAnnotationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.TimerEventDefinition} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TimerEventDefinitionItemProvider timerEventDefinitionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.TimerEventDefinition}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTimerEventDefinitionAdapter() {
        if (timerEventDefinitionItemProvider == null) {
            timerEventDefinitionItemProvider = new TimerEventDefinitionItemProvider(
                    this);
        }

        return timerEventDefinitionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.Transaction} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TransactionItemProvider transactionItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.Transaction}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTransactionAdapter() {
        if (transactionItemProvider == null) {
            transactionItemProvider = new TransactionItemProvider(this);
        }

        return transactionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link org.eclipse.mdt.bpmn2.UserTask} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected UserTaskItemProvider userTaskItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.mdt.bpmn2.UserTask}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createUserTaskAdapter() {
        if (userTaskItemProvider == null) {
            userTaskItemProvider = new UserTaskItemProvider(this);
        }

        return userTaskItemProvider;
    }

    /**
     * This returns the root adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public ComposeableAdapterFactory getRootAdapterFactory() {
        return parentAdapterFactory == null ? this : parentAdapterFactory
                .getRootAdapterFactory();
    }

    /**
     * This sets the composed adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setParentAdapterFactory(
            ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public boolean isFactoryForType(Object type) {
        return supportedTypes.contains(type) || super.isFactoryForType(type);
    }

    /**
     * This implementation substitutes the factory itself as the key for the adapter.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter adapt(Notifier notifier, Object type) {
        return super.adapt(notifier, this);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Object adapt(Object object, Object type) {
        if (isFactoryForType(type)) {
            Object adapter = super.adapt(object, type);
            if (!(type instanceof Class<?>)
                    || (((Class<?>) type).isInstance(adapter))) {
                return adapter;
            }
        }

        return null;
    }

    /**
     * This adds a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void addListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.addListener(notifyChangedListener);
    }

    /**
     * This removes a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void removeListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.removeListener(notifyChangedListener);
    }

    /**
     * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void fireNotifyChanged(Notification notification) {
        changeNotifier.fireNotifyChanged(notification);

        if (parentAdapterFactory != null) {
            parentAdapterFactory.fireNotifyChanged(notification);
        }
    }

    /**
     * This disposes all of the item providers created by this factory. 
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void dispose() {
        if (documentRootItemProvider != null)
            documentRootItemProvider.dispose();
        if (adHocSubProcessItemProvider != null)
            adHocSubProcessItemProvider.dispose();
        if (assignmentItemProvider != null)
            assignmentItemProvider.dispose();
        if (associationItemProvider != null)
            associationItemProvider.dispose();
        if (auditingItemProvider != null)
            auditingItemProvider.dispose();
        if (boundaryEventItemProvider != null)
            boundaryEventItemProvider.dispose();
        if (businessRuleTaskItemProvider != null)
            businessRuleTaskItemProvider.dispose();
        if (callableElementItemProvider != null)
            callableElementItemProvider.dispose();
        if (callActivityItemProvider != null)
            callActivityItemProvider.dispose();
        if (callChoreographyActivityItemProvider != null)
            callChoreographyActivityItemProvider.dispose();
        if (cancelEventDefinitionItemProvider != null)
            cancelEventDefinitionItemProvider.dispose();
        if (categoryItemProvider != null)
            categoryItemProvider.dispose();
        if (categoryValueItemProvider != null)
            categoryValueItemProvider.dispose();
        if (choreographyItemProvider != null)
            choreographyItemProvider.dispose();
        if (choreographySubProcessItemProvider != null)
            choreographySubProcessItemProvider.dispose();
        if (choreographyTaskItemProvider != null)
            choreographyTaskItemProvider.dispose();
        if (collaborationItemProvider != null)
            collaborationItemProvider.dispose();
        if (compensateEventDefinitionItemProvider != null)
            compensateEventDefinitionItemProvider.dispose();
        if (complexGatewayItemProvider != null)
            complexGatewayItemProvider.dispose();
        if (conditionalEventDefinitionItemProvider != null)
            conditionalEventDefinitionItemProvider.dispose();
        if (conversationItemProvider != null)
            conversationItemProvider.dispose();
        if (conversationLinkItemProvider != null)
            conversationLinkItemProvider.dispose();
        if (conversationViewItemProvider != null)
            conversationViewItemProvider.dispose();
        if (correlationKeyItemProvider != null)
            correlationKeyItemProvider.dispose();
        if (correlationPropertyItemProvider != null)
            correlationPropertyItemProvider.dispose();
        if (correlationPropertyRetrievalExpressionItemProvider != null)
            correlationPropertyRetrievalExpressionItemProvider.dispose();
        if (correlationSetItemProvider != null)
            correlationSetItemProvider.dispose();
        if (dataInputItemProvider != null)
            dataInputItemProvider.dispose();
        if (dataInputAssociationItemProvider != null)
            dataInputAssociationItemProvider.dispose();
        if (dataObjectItemProvider != null)
            dataObjectItemProvider.dispose();
        if (dataObjectStateItemProvider != null)
            dataObjectStateItemProvider.dispose();
        if (dataOutputItemProvider != null)
            dataOutputItemProvider.dispose();
        if (dataOutputAssociationItemProvider != null)
            dataOutputAssociationItemProvider.dispose();
        if (definitionsItemProvider != null)
            definitionsItemProvider.dispose();
        if (documentationItemProvider != null)
            documentationItemProvider.dispose();
        if (endEventItemProvider != null)
            endEventItemProvider.dispose();
        if (endPointItemProvider != null)
            endPointItemProvider.dispose();
        if (entityItemProvider != null)
            entityItemProvider.dispose();
        if (errorItemProvider != null)
            errorItemProvider.dispose();
        if (errorEventDefinitionItemProvider != null)
            errorEventDefinitionItemProvider.dispose();
        if (escalationItemProvider != null)
            escalationItemProvider.dispose();
        if (escalationEventDefinitionItemProvider != null)
            escalationEventDefinitionItemProvider.dispose();
        if (eventBasedGatewayItemProvider != null)
            eventBasedGatewayItemProvider.dispose();
        if (exclusiveGatewayItemProvider != null)
            exclusiveGatewayItemProvider.dispose();
        if (expressionItemProvider != null)
            expressionItemProvider.dispose();
        if (extensionItemProvider != null)
            extensionItemProvider.dispose();
        if (formalExpressionItemProvider != null)
            formalExpressionItemProvider.dispose();
        if (gatewayItemProvider != null)
            gatewayItemProvider.dispose();
        if (globalBusinessRuleTaskItemProvider != null)
            globalBusinessRuleTaskItemProvider.dispose();
        if (globalChoreographyTaskItemProvider != null)
            globalChoreographyTaskItemProvider.dispose();
        if (globalManualTaskItemProvider != null)
            globalManualTaskItemProvider.dispose();
        if (globalScriptTaskItemProvider != null)
            globalScriptTaskItemProvider.dispose();
        if (globalTaskItemProvider != null)
            globalTaskItemProvider.dispose();
        if (globalUserTaskItemProvider != null)
            globalUserTaskItemProvider.dispose();
        if (groupItemProvider != null)
            groupItemProvider.dispose();
        if (handlerItemProvider != null)
            handlerItemProvider.dispose();
        if (humanPerformerItemProvider != null)
            humanPerformerItemProvider.dispose();
        if (importItemProvider != null)
            importItemProvider.dispose();
        if (inclusiveGatewayItemProvider != null)
            inclusiveGatewayItemProvider.dispose();
        if (inputOutputBindingItemProvider != null)
            inputOutputBindingItemProvider.dispose();
        if (inputOutputSpecificationItemProvider != null)
            inputOutputSpecificationItemProvider.dispose();
        if (inputSetItemProvider != null)
            inputSetItemProvider.dispose();
        if (interfaceItemProvider != null)
            interfaceItemProvider.dispose();
        if (intermediateCatchEventItemProvider != null)
            intermediateCatchEventItemProvider.dispose();
        if (intermediateThrowEventItemProvider != null)
            intermediateThrowEventItemProvider.dispose();
        if (laneItemProvider != null)
            laneItemProvider.dispose();
        if (laneSetItemProvider != null)
            laneSetItemProvider.dispose();
        if (linkEventDefinitionItemProvider != null)
            linkEventDefinitionItemProvider.dispose();
        if (manualTaskItemProvider != null)
            manualTaskItemProvider.dispose();
        if (messageItemProvider != null)
            messageItemProvider.dispose();
        if (messageEventDefinitionItemProvider != null)
            messageEventDefinitionItemProvider.dispose();
        if (messageFlowItemProvider != null)
            messageFlowItemProvider.dispose();
        if (monitoringItemProvider != null)
            monitoringItemProvider.dispose();
        if (multiInstanceLoopCharacteristicsItemProvider != null)
            multiInstanceLoopCharacteristicsItemProvider.dispose();
        if (operationItemProvider != null)
            operationItemProvider.dispose();
        if (outputSetItemProvider != null)
            outputSetItemProvider.dispose();
        if (parallelGatewayItemProvider != null)
            parallelGatewayItemProvider.dispose();
        if (parameterItemProvider != null)
            parameterItemProvider.dispose();
        if (parameterBindingItemProvider != null)
            parameterBindingItemProvider.dispose();
        if (participantItemProvider != null)
            participantItemProvider.dispose();
        if (participantMultiplicityItemProvider != null)
            participantMultiplicityItemProvider.dispose();
        if (peopleAssignmentItemProvider != null)
            peopleAssignmentItemProvider.dispose();
        if (peopleAssignmentExpressionItemProvider != null)
            peopleAssignmentExpressionItemProvider.dispose();
        if (peopleAssignmentLiteralItemProvider != null)
            peopleAssignmentLiteralItemProvider.dispose();
        if (peopleAssignmentPeopleGroupItemProvider != null)
            peopleAssignmentPeopleGroupItemProvider.dispose();
        if (peopleGroupItemProvider != null)
            peopleGroupItemProvider.dispose();
        if (performerItemProvider != null)
            performerItemProvider.dispose();
        if (potentialOwnerItemProvider != null)
            potentialOwnerItemProvider.dispose();
        if (processItemProvider != null)
            processItemProvider.dispose();
        if (processRoleItemProvider != null)
            processRoleItemProvider.dispose();
        if (propertyItemProvider != null)
            propertyItemProvider.dispose();
        if (receiveTaskItemProvider != null)
            receiveTaskItemProvider.dispose();
        if (relationshipItemProvider != null)
            relationshipItemProvider.dispose();
        if (renderingItemProvider != null)
            renderingItemProvider.dispose();
        if (roleItemProvider != null)
            roleItemProvider.dispose();
        if (scriptItemProvider != null)
            scriptItemProvider.dispose();
        if (scriptTaskItemProvider != null)
            scriptTaskItemProvider.dispose();
        if (sendTaskItemProvider != null)
            sendTaskItemProvider.dispose();
        if (sequenceFlowItemProvider != null)
            sequenceFlowItemProvider.dispose();
        if (serviceReferenceItemProvider != null)
            serviceReferenceItemProvider.dispose();
        if (serviceTaskItemProvider != null)
            serviceTaskItemProvider.dispose();
        if (signalItemProvider != null)
            signalItemProvider.dispose();
        if (signalEventDefinitionItemProvider != null)
            signalEventDefinitionItemProvider.dispose();
        if (standardLoopCharacteristicsItemProvider != null)
            standardLoopCharacteristicsItemProvider.dispose();
        if (startEventItemProvider != null)
            startEventItemProvider.dispose();
        if (structureDefinitionItemProvider != null)
            structureDefinitionItemProvider.dispose();
        if (subProcessItemProvider != null)
            subProcessItemProvider.dispose();
        if (taskItemProvider != null)
            taskItemProvider.dispose();
        if (terminateEventDefinitionItemProvider != null)
            terminateEventDefinitionItemProvider.dispose();
        if (textItemProvider != null)
            textItemProvider.dispose();
        if (textAnnotationItemProvider != null)
            textAnnotationItemProvider.dispose();
        if (timerEventDefinitionItemProvider != null)
            timerEventDefinitionItemProvider.dispose();
        if (transactionItemProvider != null)
            transactionItemProvider.dispose();
        if (userTaskItemProvider != null)
            userTaskItemProvider.dispose();
    }

}
